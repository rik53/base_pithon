"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""
def division(arg1, arg2):
    return arg1 / arg2
try:
    print(division(int(input('Введите делитель: ')), int(input('Введите делимое: '))))
except ZeroDivisionError:
    print("Делить на ноль нельзя")
    raise ZeroDivisionError("Деление на ноль")
"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя
: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры 
как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
"""
def user(name, surname, birtday, city, email, phone):
    return
name = input('Ваше имя: ')
surname = input('Ваша фамилия: ')
birtday = input('Ваш день рождения: ')
city = input('Город проживания: ')
email = input('Ваш email: ')
phone = input('Ваш Телефон: ')
print(f'Имя: {name}, Фамилия: {surname}, День рождения: {birtday}, Город проживания: {city}, Email: {email}, Телефон: {phone}')

"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает 
сумму наибольших двух аргументов.
"""
arg1 = int(input('Первое: '))
arg2 = int(input('Второе: '))
arg3 = int(input('Третье: '))
if arg1 >= arg2 > arg3:
    def my_func(arg1, arg2, arg3):
        return arg1 + arg2
    res = my_func(arg1, arg2, arg3 )
    print('Cумма наибольших двух аргументов', res)
elif arg1 < arg2 <= arg3:
    def my_func(arg1, arg2, arg3):
        return arg2 + arg3
    res = my_func(arg1, arg2, arg3 )
    print('Cумма наибольших двух аргументов', res)
elif arg1 < arg2 > arg3 and arg3 > arg1:
    def my_func(arg1, arg2, arg3):
        return arg3 + arg2
    res = my_func(arg1, arg2, arg3 )
    print('Cумма наибольших двух аргументов', res)
elif arg1 < arg2 > arg3 and arg3 < arg1:
    def my_func(arg1, arg2, arg3):
        return arg1 + arg2
    res = my_func(arg1, arg2, arg3)
    print('Cумма наибольших двух аргументов', res)
else:
    print('Введите верные данные')

"""
4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""
x = int(input('Введите действительное положительное число x: '))
y = int(input('целое отрицательное число y: '))
if x > 0 and y < 0:
    def my_func(x, y):
	    return x ** y
    print(my_func(x, y))
else:
    print('Выполните условие ввода')

x = int(input('Введите действительное положительное число x: '))
y = int(input('целое отрицательное число y: '))
if x > 0 and y < 0:
    y = -y
    c = 1
    while c != y:
        x *= x
        c += 1
        def my_func(x, y):
	        return 1 / x
    print(my_func(x, y))
else:
    print('Выполните условие ввода')

"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, 
разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет 
добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, 
выполнение программы завершается. Если специальный символ введен после нескольких чисел, 
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""
res = 0
while True:
    sum = input('Введите два числа через пробел или @ для окончания расчетов: ')
    spl = sum.split(" ")
    for el in spl:
        try:
            number = int(el)
            res += number
        except:
            if el == '@':
                print(f"Ваша сумма = {res}.")
                exit()
            else:
               print(f"Ваша сумма {res}.")
            exit()
print(res)

"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, 
разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. 
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. 
Необходимо использовать написанную ранее функцию int_func().
"""
def int_func (*args):
    return
print(input('Введите слово из маленьких латинских букв: ').capitalize())

def int_func (*args):
    return
print(str(input('Введите слова маленькими латинскими буквами: ').title()))