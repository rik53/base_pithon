"""
1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
"""
list = [1, 2.5, 'Привет', True, None, [1, 2, 3, 'a']]
a = 0
for el in list:
    print(type(list[a]), list[a])
    a += 1
"""
2. Для списка реализовать обмен значений соседних элементов, т.е. 
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. 
При нечетном количестве элементов последний сохранить на своем месте. 
Для заполнения списка элементов необходимо использовать функцию input().
"""


elements = list(input('Заполните списк элементов: ' ))
a = 0
for el in range(int(len(elements) / 2)):
    elements[a], elements[a + 1] = elements[a + 1], elements[a]
    a += 2

print(elements)

"""
3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
Сообщить к какому времени года относится месяц (зима, весна, лето, осень). 
Напишите решения через list и через dict.
"""

month = int(input('Введите месяц в виде целого числа от 1 до 12: '))
seasons = ['Зима', 'Зима', 'Весна', 'Весна', 'Весна', 'Лето', 'Лето', 'Лето', 'Осень', 'Осень', 'Осень', 'Зима']
print(seasons[month - 1])





month = input('Введите месяц в виде целого числа от 1 до 12: ')
seasons={"1": 'Зима',
    "2": 'Зима',
    "3": 'Весна',
    "4": 'Весна',
    "5": 'Весна',
    "6": 'Лето',
    "7": 'Лето',
    "8": 'Лето',
    "9": 'Осень',
    "10": 'Осень',
    "11": 'Осень',
    "12": 'Зима',
}
print(seasons[month])

"""
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. 
Вывести каждое слово с новой строки. Строки необходимо пронумеровать. 
Если в слово длинное, выводить только первые 10 букв в слове.
"""

str = input('Введите строку из нескольких слов: ')
strs = list(str.split())
a = 0
for el in strs:
    a += 1
    print(a,el[:10])

"""
5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. 
У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы 
с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
"""

my_list = [7, 5, 3, 3, 2]
while True:
    element = int(input('Пожалуйста введите число: '))
    idx = None
    for el, num in enumerate(my_list):
        if element > num:
            idx = el
            break
    if idx is None:
        my_list.append(element)
    else:
        my_list.insert(idx, element)
    print(my_list)

    q = input('Вы еще хотите ввести число (да/нет): ')
    if q.lower() == 'нет':
        break
""" 
6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер 
товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения). 
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, 
например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}

"""

name, price, quantity, unit, answer = None, None, None, None, None
answer = input('Вы хотите заполнить таблицу?(да/нет): ')
number = 0
while answer == 'да':
        number += 1
        if name == None and price == None and quantity == None and unit== None:
            name = input('Введите название: ')
            price = int(input('Введите цену: '))
            quantity = int(input('Введите колличество: '))
            unit = input('Введите ед.: ')
            goods = [(number, {'название': name, 'цена': price, 'колличество': quantity, 'ед': unit})]
            print(goods)
            answer = input('Вы хотите заполнить таблицу?(да/нет): ')
        else:
            name = input('Введите название: ')
            price = int(input('Введите цену: '))
            quantity = int(input('Введите колличество: '))
            unit = input('Введите ед.: ')
            goods.append([(number, {'название': name, 'цена': price, 'колличество': quantity, 'ед': unit})])
            print(goods)
            answer = input('Вы хотите заполнить таблицу?(да/нет): ')


name, price, quantity, unit, answer = None, None, None, None, None
answer = input('Вы хотите заполнить таблицу?(да/нет): ')
number = 0
while answer == 'да':
        number += 1
        if name == None and price == None and quantity == None and unit== None:
            name = input('Введите название: ')
            price = int(input('Введите цену: '))
            quantity = int(input('Введите колличество: '))
            unit = input('Введите ед.: ')
            nm = [name]
            pr = [price]
            qu = [quantity]
            un = [unit]
            goods = {'название': nm,
                     'цена': pr,
                     'количество': qu,
                     'ед': un}
            #print(goods)
            answer = input('Вы хотите заполнить таблицу?(да/нет): ')
        else:
            name = input('Введите название: ')
            price = int(input('Введите цену: '))
            quantity = int(input('Введите колличество: '))
            unit = input('Введите ед.: ')
            nm.append(name)
            pr.append(price)
            qu.append(quantity)
            un.append(unit)
            goods = {'название': nm,
                     'цена': pr,
                     'количество': qu,
                     'ед': un}
            answer = input('Вы хотите заполнить таблицу?(да/нет): ')
print(goods)

